{"ast":null,"code":"import _toConsumableArray from\"/home/gol_acheron/integrals/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import{Line}from'react-chartjs-2';var Graph=function Graph(props){var minPos=props.labels.indexOf(props.min);var maxPos=props.labels.indexOf(props.max);var dataCopy=_toConsumableArray(props.data);console.log(props.min);for(var i=0;i<dataCopy.length;i++){if(i<minPos||i>maxPos){dataCopy[i]=0;}}var graphData={labels:props.labelsSimple,datasets:[{label:\"2\",backgroundColor:\"rgba(0, 181, 204, 0.6)\",highlightStroke:\"rgba(220,220,220,0.6)\",borderWidth:0,data:dataCopy,pointBackgroundColor:'rgba(0,0,0,0)',pointBorderColor:'rgba(0,0,0,0)'},{label:\"1\",backgroundColor:\"rgba(30, 139, 195, 0.6)\",highlightStroke:\"rgba(220,220,220,1)\",borderWidth:0,data:props.data,pointBackgroundColor:'rgba(0,0,0,0)',pointBorderColor:'rgba(0,0,0,0)'}]};return/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"div\",{style:{width:\"500px\"},children:/*#__PURE__*/_jsx(Line,{data:graphData,options:{legend:{display:false},responsive:true,title:{text:\"Función de Densidad\",display:true},scales:{yAxes:[{ticks:{beginAtZero:true}}],xAxes:[{ticks:{autoSkip:false},gridLines:{display:false}}]}}})})});};export default Graph;","map":{"version":3,"sources":["/home/gol_acheron/integrals/src/components/Graph.js"],"names":["React","Line","Graph","props","minPos","labels","indexOf","min","maxPos","max","dataCopy","data","console","log","i","length","graphData","labelsSimple","datasets","label","backgroundColor","highlightStroke","borderWidth","pointBackgroundColor","pointBorderColor","width","legend","display","responsive","title","text","scales","yAxes","ticks","beginAtZero","xAxes","autoSkip","gridLines"],"mappings":"qMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,iBAArB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrB,GAAIC,CAAAA,MAAM,CAAGD,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBH,KAAK,CAACI,GAA3B,CAAb,CACA,GAAIC,CAAAA,MAAM,CAAGL,KAAK,CAACE,MAAN,CAAaC,OAAb,CAAqBH,KAAK,CAACM,GAA3B,CAAb,CACA,GAAIC,CAAAA,QAAQ,oBAAOP,KAAK,CAACQ,IAAb,CAAZ,CACAC,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACI,GAAlB,EACA,IAAI,GAAIO,CAAAA,CAAC,CAAC,CAAV,CAAaA,CAAC,CAACJ,QAAQ,CAACK,MAAxB,CAAgCD,CAAC,EAAjC,CAAoC,CAChC,GAAGA,CAAC,CAACV,MAAF,EAAYU,CAAC,CAACN,MAAjB,CAAwB,CACpBE,QAAQ,CAACI,CAAD,CAAR,CAAc,CAAd,CACH,CACJ,CAED,GAAME,CAAAA,SAAS,CAAE,CACbX,MAAM,CAAEF,KAAK,CAACc,YADD,CAEbC,QAAQ,CAAE,CACN,CACIC,KAAK,CAAE,GADX,CAEIC,eAAe,CAAE,wBAFrB,CAGIC,eAAe,CAAE,uBAHrB,CAIIC,WAAW,CAAE,CAJjB,CAKIX,IAAI,CAAED,QALV,CAMIa,oBAAoB,CAAE,eAN1B,CAOIC,gBAAgB,CAAE,eAPtB,CADM,CAUN,CACAL,KAAK,CAAE,GADP,CAEAC,eAAe,CAAE,yBAFjB,CAGAC,eAAe,CAAE,qBAHjB,CAIAC,WAAW,CAAE,CAJb,CAKAX,IAAI,CAAER,KAAK,CAACQ,IALZ,CAMAY,oBAAoB,CAAE,eANtB,CAOAC,gBAAgB,CAAE,eAPlB,CAVM,CAFG,CAAjB,CA0BA,mBACI,mCAAM,YAAK,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAZ,uBACF,KAAC,IAAD,EACI,IAAI,CAAET,SADV,CAEI,OAAO,CAAE,CACLU,MAAM,CAAC,CACHC,OAAO,CAAE,KADN,CADF,CAINC,UAAU,CAAE,IAJN,CAKNC,KAAK,CAAE,CAACC,IAAI,CAAE,qBAAP,CAA8BH,OAAO,CAAE,IAAvC,CALD,CAMNI,MAAM,CAAC,CACHC,KAAK,CAAC,CACF,CACIC,KAAK,CAAC,CACDC,WAAW,CAAE,IADZ,CADV,CADE,CADH,CAQHC,KAAK,CAAC,CACL,CACIF,KAAK,CAAC,CACFG,QAAQ,CAAE,KADR,CADV,CAIIC,SAAS,CAAC,CACNV,OAAO,CAAE,KADH,CAJd,CADK,CARH,CAND,CAFb,EADE,EAAN,EADJ,CAiCH,CAtED,CAwEA,cAAezB,CAAAA,KAAf","sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst Graph = (props) => {\n    let minPos = props.labels.indexOf(props.min);\n    let maxPos = props.labels.indexOf(props.max);\n    let dataCopy = [...props.data];\n    console.log(props.min);\n    for(var i=0; i<dataCopy.length; i++){\n        if(i<minPos || i>maxPos){\n            dataCopy[i] = 0;\n        }\n    }\n\n    const graphData= {\n        labels: props.labelsSimple,\n        datasets: [\n            {\n                label: \"2\",\n                backgroundColor: \"rgba(0, 181, 204, 0.6)\",\n                highlightStroke: \"rgba(220,220,220,0.6)\",\n                borderWidth: 0,\n                data: dataCopy,\n                pointBackgroundColor: 'rgba(0,0,0,0)',\n                pointBorderColor: 'rgba(0,0,0,0)'\n              },\n            {\n            label: \"1\",\n            backgroundColor: \"rgba(30, 139, 195, 0.6)\",\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: props.data,\n            pointBackgroundColor: 'rgba(0,0,0,0)',\n            pointBorderColor: 'rgba(0,0,0,0)'\n            }\n          \n\n        ]\n    }\n\n    return (\n        <span><div style={{ width: \"500px\" }}>\n            <Line\n                data={graphData}\n                options={{\n                    legend:{\n                        display: false,\n                    },\n                   responsive: true,\n                   title: {text: \"Función de Densidad\", display: true},\n                   scales:{\n                       yAxes:[\n                           {\n                               ticks:{\n                                    beginAtZero: true,\n                               }\n                           }\n                       ],\n                       xAxes:[\n                        {\n                            ticks:{\n                                autoSkip: false\n                            },\n                            gridLines:{\n                                display: false\n                            }\n                        }\n                    ]\n                   }\n                }}\n            />\n        </div></span>\n    );\n}\n\nexport default Graph\n"]},"metadata":{},"sourceType":"module"}