{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gol_acheron/integrals/src/Distributions/Beta.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Distribution from '../components/Distribution';\nimport NumberInput from '../components/Numbernput';\nimport RangeSlider from '../components/Slider';\nimport { factorial } from '../Libraries/MyMath';\n\nfunction Beta() {\n  _s();\n\n  const [alfa, setAlfa] = useState(1);\n  const [beta, setBeta] = useState(1);\n  const [min, setMin] = useState(1);\n  const [max, setMax] = useState(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Rango de la funci\\xF3n:\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(RangeSlider, {\n        width: \"1110px\",\n        max: 20,\n        min: 0,\n        handleChange: value => {\n          setMin(value[0]);\n          setMax(value[1]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        position: \"left\",\n        width: \"100px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(NumberInput, {\n        text: \"α\",\n        default: 0,\n        handleChange: e => setAlfa(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        position: \"left\",\n        width: \"100px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(NumberInput, {\n        text: \"β\",\n        default: 0,\n        handleChange: e => setBeta(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Distribution, {\n      min: min,\n      max: max,\n      funcion: x => factorial(alfa + beta) / (factorial(alfa) * factorial(beta)) * x ** (alfa - 1)(1 - x) ** (beta - 1),\n      media: alfa / (alfa + beta),\n      varianza: alfa * beta / ((alfa + beta + 1) * (alfa + beta) ** 2),\n      step: 0.01,\n      stringMedia: \"E[X]=\\\\frac{\\\\alpha}{\\\\alpha+\\\\beta}\",\n      stringVarianza: \"Var[X]=\\\\frac{\\\\alpha\\\\beta}{(\\\\alpha+\\\\beta+1)(\\\\alpha+\\\\beta)^2}\",\n      stringDesviacion: \"\\\\sigma(X)=\\\\sqrt{\\\\frac{\\\\alpha\\\\beta}{(\\\\alpha+\\\\beta+1)(\\\\alpha+\\\\beta)^2}}\",\n      stringFuncionDensidad: \"f(x)=\\\\frac{\\\\Gamma(\\\\alpha + \\\\beta)}{\\\\Gamma(\\\\alpha)\\\\Gamma(\\\\beta)} x^{\\\\alpha-1}(1-x)^{\\\\beta -1}\",\n      stringFuncionMasa: \"F(x)=1-\\\\sum_{n=0}^{k-1}\\\\frac{e^{-\\\\lambda x}(\\\\lambda x)^n}{n!}\",\n      stringFuncionMomentos: \"M(t)=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Beta, \"6/02ljNGanfBoPiRxgdawC+B6mg=\");\n\n_c = Beta;\nexport default Gamma;\n\nvar _c;\n\n$RefreshReg$(_c, \"Beta\");","map":{"version":3,"sources":["/home/gol_acheron/integrals/src/Distributions/Beta.js"],"names":["React","useState","Distribution","NumberInput","RangeSlider","factorial","Beta","alfa","setAlfa","beta","setBeta","min","setMin","max","setMax","value","position","width","e","Number","target","x","Gamma"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Distribution from '../components/Distribution';\nimport NumberInput from '../components/Numbernput';\nimport RangeSlider from '../components/Slider';\nimport {factorial} from '../Libraries/MyMath';\n\n\n\nfunction Beta() {\n    const [alfa, setAlfa] = useState(1);\n    const [beta, setBeta] = useState(1);\n    const[min,setMin] = useState(1);\n    const[max,setMax] = useState(1);\n\n    return(\n        <div>\n            Rango de la función:\n            <span ><RangeSlider width=\"1110px\" max={20} min={0} handleChange={(value) => {setMin(value[0]); setMax(value[1])}}/></span>\n\n            <span style={{position:\"left\", width:\"100px\"}}><NumberInput text={\"α\"} default={0} handleChange={(e)=> setAlfa(Number(e.target.value))} /></span>\n            <span style={{position:\"left\", width:\"100px\"}}><NumberInput text={\"β\"} default={0} handleChange={(e)=> setBeta(Number(e.target.value))} /></span>\n\n        <Distribution \n            min={min}\n            max={max}\n            funcion={(x)=>((factorial(alfa+beta))/(factorial(alfa)*factorial(beta)) * x**(alfa-1)(1-x)**(beta-1))} \n            media = {alfa/(alfa+beta)}\n            varianza = {(alfa*beta)/((alfa+beta+1)*(alfa+beta)**2)}\n            step = {0.01}\n            stringMedia= {\"E[X]=\\\\frac{\\\\alpha}{\\\\alpha+\\\\beta}\"}\n            stringVarianza={\"Var[X]=\\\\frac{\\\\alpha\\\\beta}{(\\\\alpha+\\\\beta+1)(\\\\alpha+\\\\beta)^2}\"}\n            stringDesviacion={\"\\\\sigma(X)=\\\\sqrt{\\\\frac{\\\\alpha\\\\beta}{(\\\\alpha+\\\\beta+1)(\\\\alpha+\\\\beta)^2}}\"}\n            stringFuncionDensidad={\"f(x)=\\\\frac{\\\\Gamma(\\\\alpha + \\\\beta)}{\\\\Gamma(\\\\alpha)\\\\Gamma(\\\\beta)} x^{\\\\alpha-1}(1-x)^{\\\\beta -1}\"}\n            stringFuncionMasa={\"F(x)=1-\\\\sum_{n=0}^{k-1}\\\\frac{e^{-\\\\lambda x}(\\\\lambda x)^n}{n!}\"}\n            stringFuncionMomentos={\"M(t)=\"}\n        />\n        </div>\n        \n    )\n}\n\nexport default Gamma;"]},"metadata":{},"sourceType":"module"}