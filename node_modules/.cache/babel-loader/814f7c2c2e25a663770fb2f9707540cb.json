{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gol_acheron/integrals/src/components/Distribution.js\";\nimport React, { Component } from 'react';\nimport Graph from './Graph';\nimport { Table, Tag, Space } from 'antd';\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  key: 'name',\n  render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 21\n  }, this)\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park',\n  tags: ['nice', 'developer']\n}];\n\nclass Distribution extends Component {\n  /*\n  constructor(props){\n    super(props);\n     this.state={\n      media: 0,\n      varianza: 0,\n      desviacion: 0,\n    }\n   }\n   componentDidUpdate(prevProps) {\n    if (this.props.userID !== prevProps.userID) {\n      // do stuf\n    }\n  }\n  */\n  evaluateFunction(f, min, max, step) {\n    let data = [];\n    let labels = [];\n\n    for (var i = min; i < max; i += step) {\n      labels.push(i);\n      data.push(f(i));\n    }\n\n    return [labels, data];\n  }\n\n  integrateFunction(labels, data, min, max) {\n    let result = 0;\n\n    for (var i = 0; i < labels.length - 1; i++) {\n      if (labels[i] >= min && labels[i] < max) result += data[i];\n    }\n\n    return result / (labels[1] - labels[0]);\n  }\n\n  render() {\n    let d = this.evaluateFunction(this.props.funcion, 2, 10, 0.01);\n    let r = this.integrateFunction(d[0], d[1], 5, 6);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Graph, {\n            labels: d[0],\n            data: d[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            columns: columns,\n            dataSource: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Integral: \", r]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Atributos: \", this.props.lambda]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Distribution;","map":{"version":3,"sources":["/home/gol_acheron/integrals/src/components/Distribution.js"],"names":["React","Component","Graph","Table","Tag","Space","columns","title","dataIndex","key","render","text","data","name","age","address","tags","Distribution","evaluateFunction","f","min","max","step","labels","i","push","integrateFunction","result","length","d","props","funcion","r","lambda"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'; \nimport Graph from './Graph';\nimport { Table, Tag, Space } from 'antd';\nconst columns = [\n  {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    render: text => <a>{text}</a>,\n  }\n]\nconst data = [\n  {\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park',\n    tags: ['nice', 'developer'],\n  }\n]\n\nclass Distribution extends Component{\n \n  /*\n  constructor(props){\n    super(props);\n\n    this.state={\n      media: 0,\n      varianza: 0,\n      desviacion: 0,\n    }\n\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.userID !== prevProps.userID) {\n      // do stuf\n    }\n  }\n  */\n\n  evaluateFunction(f, min, max, step){\n    let data = [];\n    let labels = [];\n\n    for(var i=min; i<max; i+=step){\n      labels.push(i);\n      data.push(f(i));\n    }\n\n    return [labels, data];\n  }\n\n  integrateFunction(labels, data, min, max){\n    let result = 0;\n\n    for(var i=0; i<labels.length-1; i++){\n      if(labels[i]>=min && labels[i]<max)\n        result += data[i];\n    }\n\n    return result / (labels[1]-labels[0]);\n  }\n\n  render(){\n    let d = this.evaluateFunction(this.props.funcion , 2, 10, 0.01);\n    let r = this.integrateFunction(d[0], d[1], 5,6);\n\n    return(\n      <div> \n            <h1>{this.props.name}</h1>\n            <div>\n              <span><Graph labels={d[0]} data={d[1]}/></span>\n              <span><Table columns={columns} dataSource={data}/></span>\n            </div>\n            <p>Integral: {r}</p>\n            <p>Atributos: {this.props.lambda}</p>\n      </div>\n    )\n  }\n\n}\n\nexport default Distribution;"]},"metadata":{},"sourceType":"module"}