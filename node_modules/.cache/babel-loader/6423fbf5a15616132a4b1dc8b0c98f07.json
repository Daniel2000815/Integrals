{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gol_acheron/integrals/src/components/Graph.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst Graph = props => {\n  console.log(\"min: \" + props.labels.indexOf(props.min) + \", bb:\" + props.labels.indexOf(props.max));\n  console.log([...props.data].slice(props.labels.indexOf(props.min), props.labels.indexOf(props.max)));\n  let minPos = props.labels.indexOf(props.min);\n  let maxPos = props.labels.indexOf(props.max);\n  let firstArray = [];\n  let secondArray = [];\n  let lastArray = [];\n\n  for (var i = 0; i < props.labels.length; i++) {\n    if (labels[i] < minPos) {\n      firstArray.push(props.data[i]);\n      secondArray.push(0);\n      lastArray.push(0);\n    } else if (labels[i] < maxPos) {\n      firstArray.push(0);\n      secondArray.push(props.data[i]);\n      lastArray.push(0);\n    } else {\n      firstArray.push(0);\n      secondArray.push(0);\n      lastArray.push(props.data[i]);\n    }\n  }\n\n  const graphData = {\n    labels: props.labelsSimple,\n    datasets: [{\n      backgroundColor: 'blue',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: firstArray,\n      pointBackgroundColor: 'rgba(0,0,0,0)',\n      pointBorderColor: 'rgba(0,0,0,0)'\n    }, {\n      backgroundColor: 'blue',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: secondArray,\n      pointBackgroundColor: 'rgba(0,0,0,0)',\n      pointBorderColor: 'rgba(0,0,0,0)'\n    }, {\n      backgroundColor: 'yellow',\n      highlightStroke: \"rgba(220,220,220,1)\",\n      borderWidth: 0,\n      data: lastArray,\n      pointBackgroundColor: 'rgba(0,0,0,0)',\n      pointBorderColor: 'rgba(0,0,0,0)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"500px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: graphData,\n        options: {\n          legend: {\n            display: false\n          },\n          responsive: true,\n          title: {\n            text: \"Función de Densidad\",\n            display: true\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: false\n              },\n              gridLines: {\n                display: false\n              }\n            }]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/gol_acheron/integrals/src/components/Graph.js"],"names":["React","Line","Graph","props","console","log","labels","indexOf","min","max","data","slice","minPos","maxPos","firstArray","secondArray","lastArray","i","length","push","graphData","labelsSimple","datasets","backgroundColor","highlightStroke","borderWidth","pointBackgroundColor","pointBorderColor","width","legend","display","responsive","title","text","scales","yAxes","ticks","beginAtZero","xAxes","autoSkip","gridLines"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst Graph = (props) => {\n    console.log(\"min: \" + props.labels.indexOf(props.min) + \", bb:\" + props.labels.indexOf(props.max));\n    console.log([...props.data].slice(props.labels.indexOf(props.min), props.labels.indexOf(props.max)));\n    let minPos = props.labels.indexOf(props.min);\n    let maxPos = props.labels.indexOf(props.max);\n    let firstArray=[];\n    let secondArray=[];\n    let lastArray=[];\n\n    for(var i=0; i<props.labels.length; i++){\n        if(labels[i] < minPos){\n            firstArray.push(props.data[i]);\n            secondArray.push(0);\n            lastArray.push(0);\n        }\n        else if(labels[i] < maxPos){\n            firstArray.push(0);\n            secondArray.push(props.data[i]);\n            lastArray.push(0);\n        }\n        else{\n            firstArray.push(0);\n            secondArray.push(0);\n            lastArray.push(props.data[i]);\n        }\n    }\n\n    const graphData= {\n        labels: props.labelsSimple,\n        datasets: [\n          {\n            backgroundColor: 'blue',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: firstArray,\n            pointBackgroundColor: 'rgba(0,0,0,0)',\n            pointBorderColor: 'rgba(0,0,0,0)'\n          },\n          {\n            backgroundColor: 'blue',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: secondArray,\n            pointBackgroundColor: 'rgba(0,0,0,0)',\n            pointBorderColor: 'rgba(0,0,0,0)'\n          },\n          {\n            backgroundColor: 'yellow',\n            highlightStroke: \"rgba(220,220,220,1)\",\n            borderWidth: 0,\n            data: lastArray,\n            pointBackgroundColor: 'rgba(0,0,0,0)',\n            pointBorderColor: 'rgba(0,0,0,0)'\n          }\n\n        ]\n    }\n\n    return (\n        <span><div style={{ width: \"500px\" }}>\n            <Line\n                data={graphData}\n                options={{\n                    legend:{\n                        display: false,\n                    },\n                   responsive: true,\n                   title: {text: \"Función de Densidad\", display: true},\n                   scales:{\n                       yAxes:[\n                           {\n                               ticks:{\n                                    beginAtZero: true,\n                               }\n                           }\n                       ],\n                       xAxes:[\n                        {\n                            ticks:{\n                                autoSkip: false\n                            },\n                            gridLines:{\n                                display: false\n                            }\n                        }\n                    ]\n                   }\n                }}\n            />\n        </div></span>\n    );\n}\n\nexport default Graph\n"]},"metadata":{},"sourceType":"module"}