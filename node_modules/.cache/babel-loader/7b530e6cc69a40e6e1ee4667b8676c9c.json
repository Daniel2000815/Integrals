{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gol_acheron/integrals/src/components/Distribution.js\";\nimport React, { Component } from 'react';\nimport Graph from './Graph';\nimport RangeSlider from '../components/Slider';\nimport MyTable from '../components/Table';\n\nclass Distribution extends Component {\n  constructor() {\n    super();\n\n    this.changeRange = value => {\n      this.setState({\n        limitInf: value[0],\n        limitMax: value[1]\n      });\n    };\n\n    this.state = {\n      limitInf: 0,\n      limitMax: 0\n    };\n  }\n\n  evaluateFunction(f, min, max, step) {\n    let data = [];\n    let labels = [];\n    let labelsSimple = [];\n\n    for (var i = min; i < max; i += step) {\n      let labelRedondeada = Math.round(i * 100) / 100;\n      console.log(labelRedondeada);\n      labels.push(labelRedondeada);\n      data.push(f(labelRedondeada));\n\n      if (labelRedondeada % 1 === 0) {\n        labelsSimple.push(labelRedondeada.toString());\n      } else labelsSimple.push('');\n    }\n\n    return [labels, data, labelsSimple];\n  }\n\n  integrateFunction(labels, data, min, max) {\n    let result = 0;\n\n    for (var i = 0; i < labels.length - 1; i++) {\n      if (labels[i] >= min && labels[i] < max) result += data[i];\n    }\n\n    return result / (labels[1] - labels[0]);\n  }\n\n  render() {\n    let d = this.evaluateFunction(this.props.funcion, this.props.min, this.props.max, this.props.step);\n    let r = this.integrateFunction(d[0], d[1], this.state.limitInf, this.state.limitMax);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            float: \"left\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Graph, {\n            min: this.state.min,\n            max: this.state.max,\n            labels: d[0],\n            labelsSimple: d[2],\n            data: d[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            top: \"50%\",\n            float: \"right\"\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(MyTable, {\n            media: this.props.media,\n            varianza: this.props.varianza\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 58\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(RangeSlider, {\n          step: this.props.step,\n          width: \"500px\",\n          max: this.props.max,\n          min: this.props.min,\n          handleChange: this.changeRange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Integral: \", r]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Atributos: \", this.props.lambda]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Distribution;","map":{"version":3,"sources":["/home/gol_acheron/integrals/src/components/Distribution.js"],"names":["React","Component","Graph","RangeSlider","MyTable","Distribution","constructor","changeRange","value","setState","limitInf","limitMax","state","evaluateFunction","f","min","max","step","data","labels","labelsSimple","i","labelRedondeada","Math","round","console","log","push","toString","integrateFunction","result","length","render","d","props","funcion","r","width","float","top","media","varianza","lambda"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'; \nimport Graph from './Graph';\nimport RangeSlider from '../components/Slider';\nimport MyTable from '../components/Table'\n\n\n\nclass Distribution extends Component{\n \n  constructor(){\n    super();\n\n    this.state={\n      limitInf:0,\n      limitMax:0\n    }\n\n  }\n\n  \n\n  evaluateFunction(f, min, max, step){\n    let data = [];\n    let labels = [];\n    let labelsSimple = [];\n\n    for(var i=min; i<max; i+=step){\n      let labelRedondeada = Math.round(i*100)/100;\n      console.log(labelRedondeada);\n      labels.push(labelRedondeada);\n      data.push(f(labelRedondeada));\n\n      if(labelRedondeada % 1 === 0){\n        labelsSimple.push(labelRedondeada.toString());\n      }\n      else\n        labelsSimple.push('');\n    }\n\n    return [labels, data, labelsSimple];\n  }\n\n  integrateFunction(labels, data, min, max){\n    let result = 0;\n\n    for(var i=0; i<labels.length-1; i++){\n      if(labels[i]>=min && labels[i]<max)\n        result += data[i];\n    }\n\n    return result / (labels[1]-labels[0]);\n  }\n\n  changeRange = (value) =>{\n    this.setState({limitInf:value[0], limitMax:value[1]});\n  }\n\n  render(){\n    let d = this.evaluateFunction(this.props.funcion , this.props.min, this.props.max, this.props.step);\n    let r = this.integrateFunction(d[0], d[1], this.state.limitInf, this.state.limitMax);\n\n    return(\n      <div> \n            <div style={{width:\"100%\"}}>\n              <span style={{float: \"left\"}}><Graph min={this.state.min} max={this.state.max} labels={d[0]} labelsSimple={d[2]} data={d[1]}/></span>\n              <span style={{top:\"50%\", float: \"right\"}}> <MyTable media={this.props.media} varianza={this.props.varianza}/> </span>\n              <RangeSlider step={this.props.step} width=\"500px\" max={this.props.max} min={this.props.min} handleChange={this.changeRange}/>\n            </div>\n            <br></br>\n            <p>Integral: {r}</p>\n            <p>Atributos: {this.props.lambda}</p>\n      </div>\n    )\n  }\n\n}\n\nexport default Distribution;"]},"metadata":{},"sourceType":"module"}